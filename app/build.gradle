apply plugin: 'com.android.application'

android {
    signingConfigs {
        release {
            storeFile file('health.keystore')
            storePassword '123456'
            keyAlias = 'health'
            keyPassword '123456'
        }
    }
    compileSdkVersion rootProject.ext.android["compileSdkVersion"]
    buildToolsVersion rootProject.ext.android["buildToolsVersion"]
    defaultConfig {
        applicationId "com.wd.health"
        minSdkVersion rootProject.ext.android["minSdkVersion"]
        targetSdkVersion rootProject.ext.android["targetSdkVersion"]
        versionCode rootProject.ext.android["versionCode"]
        versionName rootProject.ext.android["versionName"]
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        multiDexEnabled true
        //Arouter路由配置
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [AROUTER_MODULE_NAME: project.getName()]
            }
        }
        ndk {
            //选择要添加的对应cpu类型的.so库。
            abiFilters "armeabi", 'arm64-v8a', 'x86', 'x86_64', 'mips', 'mips64'
            // 还可以添加
        }
        manifestPlaceholders = [
                JPUSH_PKGNAME: "com.wd.health",
                JPUSH_APPKEY : "c7f6a1d56cb8da740fd18bfa",
                JPUSH_CHANNEL: "developer - default"
        ]
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    packagingOptions {
        exclude 'lib/armeabi-v7a/libijkplayer.so'
        pickFirst 'lib/armeabi-v7a/libnms.so'
        pickFirst 'lib/x86/libijksdl.so'
        pickFirst 'lib/x86/libijkplayer.so'
        pickFirst 'lib/x86_64/libijksdl.so'
        pickFirst 'lib/x86_64/libijkplayer.so'
        //c c++ 软解硬解  解码
        pickFirst 'lib/x86/libijkffmpeg.so'
        pickFirst 'lib/arm64-v8a/libijkplayer.so'
        pickFirst 'lib/arm64-v8a/libijkffmpeg.so'
        pickFirst 'lib/armeabi-v7a/libijkffmpeg.so'
        pickFirst 'lib/x86_64/libijkffmpeg.so'
        pickFirst 'lib/arm64-v8a/libijksdl.so'
        pickFirst 'lib/armeabi-v7a/libijksdl.so'
    }
    //ButterKnife需要   model中的andorid选项中   兼容java8
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

}
configurations.all {
    resolutionStrategy.force 'com.android.support:support-annotations:28.0.0'
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'

    implementation rootProject.ext.dependencies["okhttp3"]
    implementation rootProject.ext.dependencies["retrofit"]
    implementation rootProject.ext.dependencies["rxandroid"]
    implementation rootProject.ext.dependencies["retrofit-converter-gson"]
    implementation rootProject.ext.dependencies["retrofit-adapter-rxjava"]
    implementation rootProject.ext.dependencies["converter-scalars"]
    implementation rootProject.ext.dependencies["recyclerview-v7"]
    implementation rootProject.ext.dependencies["banner"]
    implementation rootProject.ext.dependencies["autosize"]
    implementation rootProject.ext.dependencies["tablayout"]
    implementation rootProject.ext.dependencies["rxjava"]
    implementation rootProject.ext.dependencies["fresco"]
    implementation rootProject.ext.dependencies["butterknife"]
    implementation rootProject.ext.dependencies["PickerView"]
    implementation rootProject.ext.dependencies["wx_sdk"]
    implementation rootProject.ext.dependencies["SmartRefreshLayout"]
    implementation rootProject.ext.dependencies["StickyListHeaders"]
    implementation rootProject.ext.dependencies["jpush"]
    implementation rootProject.ext.dependencies["jpushcore"]
    implementation rootProject.ext.dependencies["multidex"]
    implementation rootProject.ext.dependencies["eventbus"]
    implementation rootProject.ext.dependencies["permission"]
    annotationProcessor 'com.jakewharton:butterknife-compiler:10.2.0'
    annotationProcessor 'com.alibaba:arouter-compiler:+'
    implementation project(':common')
    implementation project(':home')
    implementation project(':my_message')
}
