apply plugin: 'com.android.library'

android {
    compileSdkVersion rootProject.ext.android["compileSdkVersion"]
    buildToolsVersion rootProject.ext.android["buildToolsVersion"]
    defaultConfig {
        multiDexEnabled true
        minSdkVersion rootProject.ext.android["minSdkVersion"]
        targetSdkVersion rootProject.ext.android["targetSdkVersion"]
        versionCode rootProject.ext.android["versionCode"]
        versionName rootProject.ext.android["versionName"]

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles 'consumer-rules.pro'

        //Arouter路由配置
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [AROUTER_MODULE_NAME: project.getName()]
                includeCompileClasspath = true
            }
        }
        ndk {
            //选择要添加的对应cpu类型的.so库。
            abiFilters "armeabi",'arm64-v8a'
            // 还可以添加 'x86', 'x86_64', 'mips', 'mips64'
        }

        manifestPlaceholders = [
                JPUSH_PKGNAME : "com.wd.health",
                JPUSH_APPKEY : "564c4319e940cdd0aadeebf0", //JPush上注册的包名对应的appkey.
                JPUSH_CHANNEL : "developer-default", //暂时填写默认值即可.
        ]
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    packagingOptions {
        exclude 'lib/armeabi-v7a/libijkplayer.so'
        pickFirst 'lib/armeabi-v7a/libnms.so'
        pickFirst 'lib/x86/libijksdl.so'
        pickFirst 'lib/x86/libijkplayer.so'
        pickFirst 'lib/x86_64/libijksdl.so'
        pickFirst 'lib/x86_64/libijkplayer.so'
        //c c++ 软解硬解  解码
        pickFirst 'lib/x86/libijkffmpeg.so'
        pickFirst 'lib/arm64-v8a/libijkplayer.so'
        pickFirst 'lib/arm64-v8a/libijkffmpeg.so'
        pickFirst 'lib/armeabi-v7a/libijkffmpeg.so'
        pickFirst 'lib/x86_64/libijkffmpeg.so'
        pickFirst 'lib/arm64-v8a/libijksdl.so'
        pickFirst 'lib/armeabi-v7a/libijksdl.so'
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation 'androidx.appcompat:appcompat:1.1.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'

    //butterknife
    implementation rootProject.ext.dependencies["okhttp3"]
    implementation rootProject.ext.dependencies["retrofit"]
    implementation rootProject.ext.dependencies["rxandroid"]
    implementation rootProject.ext.dependencies["retrofit-converter-gson"]
    implementation rootProject.ext.dependencies["retrofit-adapter-rxjava"]
    implementation rootProject.ext.dependencies["converter-scalars"]
    implementation rootProject.ext.dependencies["jiaozivideoplayer"]
    implementation rootProject.ext.dependencies["ijkplayer"]
    implementation rootProject.ext.dependencies["ijkplayerarmv7a"]
    implementation rootProject.ext.dependencies["ijkplayerexo"]
    implementation rootProject.ext.dependencies["constraint-layout"]
    implementation rootProject.ext.dependencies["jjdxm-ijkplayer"]
    implementation rootProject.ext.dependencies["tablayout"]
    implementation rootProject.ext.dependencies["xrecyclerview"]
    implementation 'com.jakewharton:butterknife:10.2.1'
    annotationProcessor 'com.jakewharton:butterknife-compiler:10.2.0'
    //阿里巴巴路由    放入MVP依赖
    //路由器
    api 'com.alibaba:arouter-api:+'
    annotationProcessor 'com.alibaba:arouter-compiler:+'
    implementation rootProject.ext.dependencies["fresco"]
    //悬浮按钮
    implementation 'com.android.support:design:<version>'
    api 'cn.jiguang.sdk:jpush:3.1.6'  // 此处以JPush 3.1.6 版本为例。
    api 'cn.jiguang.sdk:jcore:1.2.5'  // 此处以JCore 1.2.5 版本为例。
}